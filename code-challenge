# Create a new list named double_nums by multiplying each number in nums by two.

double_nums = [i * 2 for i in nums]


# Create a new list named squares that contains the square of every number in this list.

squares = [i**2 for i in nums]


# Create a new list named add_ten that adds ten to every element in the list nums.

add_ten = [i + 10 for i in nums]


# Create a new list named divide_by_two that contains half of every element in the list nums. 

divide_by_two = [i / 2 for i in nums]



# Create a new list named parity that contains a 1 or a 0 for each element of nums. 

parity = [i%2 for i in nums]


# Create a new list named greetings that adds "Hello, " in front of each name in the list names.

greetings = ["Hello, " + name for name in names]


# Create a new list named first_character that contains the first character from every name in the list names

first_character = [name[0] for name in names]


# Create a new list named lengths that contains the size of each name in the list of names

lengths = [len(name) for name in names]


# Create a new list named opposite that contains the opposite boolean for each element in the list booleans.

opposite = [not i for i in booleans]


# Create a new list called is_Jerry, in which an entry at position i is True if the entry in names at position i equals "Jerry". 

is_Jerry = [i == "Jerry" for i in names]


# Create a new list named product that contains the product of each sub-list of nested_lists.

product = [i1 * i2 for (i1, i2) in nested_lists]


# Create a new list named greater_than that contains True if the first number in the sub-list is greater than the second number in the sub-list, and False otherwise.

greater_than = [i1 > i2 for (i1, i2) in nested_lists]


# Create a new list named first_only that contains the first element in each sub-list of nested_lists.

first_only = [i1 for (i1, i2) in nested_lists]


# Use list comprehension and the zip function to create a new list named sums that sums corresponding items in lists a and b. 

combined = zip(a, b)
sums = [i1 + i2 for (i1, i2) in combined]


# Use list comprehension and the zip function to create a new list named quotients that divides the elements in list b by those in list a .

combined = zip(a,b)
quotients = [i2 / i1 for (i1, i2) in combined]


# Create a new list named locations that contains the string "capital, country" for each item in the original lists.

locations = [capital + ", " + country for (capital, country) in zip(capitals, countries)]


# Youâ€™ve been given two lists: a list of names and a list of ages. Create a new list named users that contains the string "Name: name, Age: age" for each pair of elements in the original lists.

users = ["Name: " + name + ", Age: " + str(age) for (name, age) in zip(names, ages)]


# Create a new list named greater_than that contains True or False depending on whether the corresponding item in list a is greater than the one in list b.

greater_than = [a1 > b1 for (a1, b1) in zip(a, b)]

